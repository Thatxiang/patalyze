<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v43-2012-12-04.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.3 2012-12-04" file="US20140006464A1-20140102.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20131218" date-publ="20140102"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20140006464</doc-number><kind>A1</kind><date>20140102</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>13930594</doc-number><date>20130628</date></document-id></application-reference><us-application-series-code>13</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>17</main-group><subgroup>30</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20140102</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>17</main-group><subgroup>30194</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20140102</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><classification-national><country>US</country><main-classification>707827</main-classification></classification-national><invention-title id="d0e43">USING PROJECTED TIMESTAMPS TO CONTROL THE SEQUENCING OF FILE MODIFICATIONS IN DISTRIBUTED FILESYSTEMS</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>61666597</doc-number><date>20120629</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only"><addressbook><last-name>Pitts</last-name><first-name>William M</first-name><address><city>Los Altos</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Pitts</last-name><first-name>William M</first-name><address><city>Los Altos</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">It is not possible to maintain extremely tight synchronization of the time keeping clocks of the networked nodes comprising a distributed filesystem. However, when multiple client systems access the same file from different remote locations, a distributed consistency mechanism must ensure that all file read and write requests are only serviced from the latest version of the file. The current industry practice is to disable client-side caching when a concurrent write sharing condition arises (multiple clients active on the file and at least one of them writing). This forces all requests to flow through to the file server and consistency is maintained since all requests are then serviced from the same file image. The current practice sacrifices performance and scalability to maintain consistency. This document discloses methods for projecting and maintaining temporary filesystem timestamps that allow file read and write requests to be serviced from remote cached file images while still providing the same file consistency as the current industry practice. The temporary filesystem timestamps are updated to real filesystem timestamps whenever the client-side cache communicates with the file server.</p></abstract></us-patent-application>